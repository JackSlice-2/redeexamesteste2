// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  emailVerified DateTime?
  image String?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isAdmin Boolean?
  isClient Boolean?
  role String? @default("client")

  listings Listing[]
  partners Partner[]
}

model Listing {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String
  imageSrc String
  createdAt DateTime @default(now())
  category String
  company String?
  payNow Int?
  payThere Int?
  firstComeFirstServe Boolean?
  byAppointmentOnly Boolean?
  locationValue String?
  userId String @db.ObjectId
  dates String[]
  price Int?
  startTime String?
  endTime String?
  latlng String[]
  isActive Boolean?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Partner {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  title String
  imageSrc String
  createdAt DateTime @default(now())
  whatsApp String?
  phone String?
  phone2 String?
  phone3 String?
  email String?
  address String?
  cities String[]
  branchPhone String[]
  mainCity String[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}